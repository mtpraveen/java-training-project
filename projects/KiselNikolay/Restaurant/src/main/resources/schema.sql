DROP TABLE IF EXISTS ORDER_HAS_DISH;
DROP TABLE IF EXISTS DISH;
DROP TABLE IF EXISTS SECTION;
DROP TABLE IF EXISTS USER_ORDER;
DROP TABLE IF EXISTS USER_HAS_ROLE;
DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS APP_USER;

CREATE TABLE SECTION (
NAME_SECTION VARCHAR(40) NOT NULL,
PRIMARY KEY (NAME_SECTION)
);

CREATE TABLE DISH (
NAME_DISH VARCHAR(40) NOT NULL,
NAME_SECTION VARCHAR(40) NOT NULL,
COST INT NOT NULL,
INGREDIENTS VARCHAR(60),
DESCRIPTION VARCHAR(250),
IMAGE BLOB,
PRIMARY KEY (NAME_DISH),
CONSTRAINT FK_DISH FOREIGN KEY (NAME_SECTION)
REFERENCES SECTION (NAME_SECTION)
);

CREATE TABLE ROLE (
ID_ROLE VARCHAR(20) NOT NULL,
DESCRIPTION VARCHAR(40),
PRIMARY KEY(ID_ROLE)
);

CREATE TABLE APP_USER (
ID_USER VARCHAR(20) NOT NULL,
USER_PASSWORD VARCHAR(250) NOT NULL,
USER_NAME VARCHAR(40) NOT NULL,
SURNAME VARCHAR(40) NOT NULL,
BIRTH_DATE DATE,
TELEPHONE INT,
ADRESS VARCHAR(250),
CARD_NUMBER VARCHAR(40),
PRIMARY KEY (ID_USER)
);

CREATE TABLE USER_HAS_ROLE (
ID_USER VARCHAR(20) NOT NULL,
ID_ROLE VARCHAR (20) NOT NULL,
PRIMARY KEY(ID_ROLE, ID_USER),
CONSTRAINT FK_USER_HAS_ROLE_1 FOREIGN KEY (ID_USER)
REFERENCES APP_USER (ID_USER),
CONSTRAINT FK_USER_HAS_ROLE_2 FOREIGN KEY (ID_ROLE)
REFERENCES ROLE (ID_ROLE)
);

CREATE TABLE USER_ORDER (
ID_ORDER INT NOT NULL AUTO_INCREMENT,
ID_USER VARCHAR(20) NOT NULL,
ADRESS VARCHAR(250) NOT NULL,
CARD_NUMBER VARCHAR(40) NOT NULL,
ORDER_DATE DATE,
ORDER_HOUR INT,
COST INT,
PAID BOOLEAN,
DELIVERED BOOLEAN,
PRIMARY KEY (ID_ORDER),
CONSTRAINT FK_USER_ORDER_1 FOREIGN KEY (ID_USER)
REFERENCES APP_USER (ID_USER)
);

CREATE TABLE ORDER_HAS_DISH (
ID_ORDER INT NOT NULL,
NAME_DISH VARCHAR(40) NOT NULL,
PRIMARY KEY (ID_ORDER, NAME_DISH),
CONSTRAINT FK_ORDER_HAS_DISH_1 FOREIGN KEY (ID_ORDER)
REFERENCES USER_ORDER (ID_ORDER),
CONSTRAINT FK_ORDER_HAS_DISH_2 FOREIGN KEY (NAME_DISH)
REFERENCES DISH (NAME_DISH)
);